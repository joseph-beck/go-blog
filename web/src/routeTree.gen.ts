/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as R404Import } from './routes/__404'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const BlogLazyImport = createFileRoute('/blog')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const BlogBlogIdLazyImport = createFileRoute('/blog/$blogId')()
const BlogBlogIdPostIdLazyImport = createFileRoute('/blog/$blogId/$postId')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const BlogLazyRoute = BlogLazyImport.update({
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/blog.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const R404Route = R404Import.update({
  id: '/__404',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const BlogBlogIdLazyRoute = BlogBlogIdLazyImport.update({
  path: '/blog/$blogId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/blog_.$blogId.lazy').then((d) => d.Route))

const BlogBlogIdPostIdLazyRoute = BlogBlogIdPostIdLazyImport.update({
  path: '/blog/$blogId/$postId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/blog_.$blogId_.$postId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__404': {
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      preLoaderRoute: typeof BlogLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog/$blogId': {
      preLoaderRoute: typeof BlogBlogIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog/$blogId/$postId': {
      preLoaderRoute: typeof BlogBlogIdPostIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  R404Route,
  AboutLazyRoute,
  BlogLazyRoute,
  LoginLazyRoute,
  RegisterLazyRoute,
  BlogBlogIdLazyRoute,
  BlogBlogIdPostIdLazyRoute,
])

/* prettier-ignore-end */
